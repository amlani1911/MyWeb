// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWeb.Data;

#nullable disable

namespace MyWeb.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230621070247_new_column")]
    partial class new_column
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyWeb.Models.Capacity", b =>
                {
                    b.Property<int>("Capacity_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Capacity_Id"), 1L, 1);

                    b.Property<string>("Cap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Capacity_Id");

                    b.ToTable("Capacities");
                });

            modelBuilder.Entity("MyWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MyWeb.Models.Products", b =>
                {
                    b.Property<int>("Sku_Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sku_Code"), 1L, 1);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sku_Code");

                    b.HasIndex("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MyWeb.Models.Products_Capacity", b =>
                {
                    b.Property<int>("Capacity_Id")
                        .HasColumnType("int");

                    b.Property<int>("Sku_Code")
                        .HasColumnType("int");

                    b.HasKey("Capacity_Id", "Sku_Code");

                    b.HasIndex("Sku_Code");

                    b.ToTable("Products_Capacities");
                });

            modelBuilder.Entity("MyWeb.Models.Products", b =>
                {
                    b.HasOne("MyWeb.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyWeb.Models.Products_Capacity", b =>
                {
                    b.HasOne("MyWeb.Models.Capacity", "Capacity")
                        .WithMany("Products_Capacities")
                        .HasForeignKey("Capacity_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWeb.Models.Products", "Products")
                        .WithMany("Products_Capacities")
                        .HasForeignKey("Sku_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacity");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MyWeb.Models.Capacity", b =>
                {
                    b.Navigation("Products_Capacities");
                });

            modelBuilder.Entity("MyWeb.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MyWeb.Models.Products", b =>
                {
                    b.Navigation("Products_Capacities");
                });
#pragma warning restore 612, 618
        }
    }
}
